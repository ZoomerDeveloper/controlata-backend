const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function addMaterialsToPictures() {
  try {
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫ –≥–æ—Ç–æ–≤—ã–º –∫–∞—Ä—Ç–∏–Ω–∞–º...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≥–æ—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω—ã
    const readyMadePictures = await prisma.picture.findMany({
      where: { type: 'READY_MADE' },
      include: {
        pictureSize: true
      }
    });

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${readyMadePictures.length} –≥–æ—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω`);

    // –ü–æ–ª—É—á–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    const materials = await prisma.material.findMany();
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${materials.length} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤`);

    for (const picture of readyMadePictures) {
      console.log(`\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω—É: ${picture.name}`);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
      let canvasMaterial, frameMaterial;
      
      if (picture.pictureSize?.name === 'small' || picture.name.includes('20x30')) {
        canvasMaterial = materials.find(m => m.name === '–•–æ–ª—Å—Ç 20x30');
        frameMaterial = materials.find(m => m.name === '–†–∞–º–∫–∞ 20x30');
      } else if (picture.pictureSize?.name === 'medium' || picture.name.includes('30x40')) {
        canvasMaterial = materials.find(m => m.name === '–•–æ–ª—Å—Ç 30x40');
        frameMaterial = materials.find(m => m.name === '–†–∞–º–∫–∞ 30x40');
      } else if (picture.pictureSize?.name === 'large' || picture.name.includes('40x50')) {
        canvasMaterial = materials.find(m => m.name === '–•–æ–ª—Å—Ç 40x50');
        frameMaterial = materials.find(m => m.name === '–†–∞–º–∫–∞ 40x50');
      } else {
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä
        canvasMaterial = materials.find(m => m.name === '–•–æ–ª—Å—Ç 30x40');
        frameMaterial = materials.find(m => m.name === '–†–∞–º–∫–∞ 30x40');
      }

      const paintMaterial = materials.find(m => m.name === '–ö—Ä–∞—Å–∫–∏ –∞–∫—Ä–∏–ª–æ–≤—ã–µ');
      const brushMaterial = materials.find(m => m.name === '–ö–∏—Å—Ç–∏');

      // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫ –∫–∞—Ä—Ç–∏–Ω–µ
      const pictureMaterials = [
        { materialId: canvasMaterial?.id, quantity: 1 },
        { materialId: frameMaterial?.id, quantity: 1 },
        { materialId: paintMaterial?.id, quantity: 1 },
        { materialId: brushMaterial?.id, quantity: 1 }
      ].filter(pm => pm.materialId); // –£–±–∏—Ä–∞–µ–º undefined

      for (const pm of pictureMaterials) {
        await prisma.pictureMaterial.create({
          data: {
            pictureId: picture.id,
            materialId: pm.materialId,
            quantity: pm.quantity
          }
        });
        console.log(`  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ç–µ—Ä–∏–∞–ª: ${materials.find(m => m.id === pm.materialId)?.name}`);
      }
    }

    console.log('\nüéâ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ –≤—Å–µ–º –≥–æ—Ç–æ–≤—ã–º –∫–∞—Ä—Ç–∏–Ω–∞–º!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addMaterialsToPictures();
