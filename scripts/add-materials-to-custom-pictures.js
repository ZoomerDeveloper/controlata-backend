const { PrismaClient } = require('@prisma/client');
const pictureMaterialService = require('../src/services/pictureMaterialService');

const prisma = new PrismaClient();

async function addMaterialsToCustomPictures() {
  try {
    console.log('üîç –ò—â–µ–º –∫–∞—Ä—Ç–∏–Ω—ã –ø–æ —Ñ–æ—Ç–æ –±–µ–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...');

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω—ã –ø–æ —Ñ–æ—Ç–æ –±–µ–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const customPictures = await prisma.picture.findMany({
      where: {
        type: 'CUSTOM_PHOTO',
        materials: {
          none: {}
        }
      },
      include: {
        pictureSize: true
      }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${customPictures.length} –∫–∞—Ä—Ç–∏–Ω –ø–æ —Ñ–æ—Ç–æ –±–µ–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤`);

    if (customPictures.length === 0) {
      console.log('‚úÖ –í—Å–µ –∫–∞—Ä—Ç–∏–Ω—ã –ø–æ —Ñ–æ—Ç–æ —É–∂–µ –∏–º–µ—é—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã');
      return;
    }

    let successCount = 0;
    let errorCount = 0;

    for (const picture of customPictures) {
      try {
        console.log(`üîß –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∫–∞—Ä—Ç–∏–Ω—ã: ${picture.name} (${picture.id})`);
        
        await pictureMaterialService.createStandardMaterialsForPicture(
          picture.id,
          picture.pictureSizeId,
          'CUSTOM_PHOTO'
        );

        successCount++;
        console.log(`‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–ª—è –∫–∞—Ä—Ç–∏–Ω—ã: ${picture.name}`);
      } catch (error) {
        errorCount++;
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω—ã ${picture.name}:`, error.message);
      }
    }

    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${successCount}`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(`üìà –í—Å–µ–≥–æ –∫–∞—Ä—Ç–∏–Ω: ${customPictures.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
addMaterialsToCustomPictures();
